# -*- coding: utf-8 -*-
"""Simple_Linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/124x_2-vuKOQW3wmJpNY0Vbwf3zpWSmBZ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression

df=pd.read_csv('/content/test.csv')

#Loading dataset

from sklearn.model_selection import train_test_split 

#importing train test split to split into training and testing data

X = df[['x']]
y = df[['y']]
#Taking x and y from dataset

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.9)
#splitting the data into training and testing data

LR = LinearRegression()

#linear regression model

X_train

#displaying x of training data

LR.fit(X_train,y_train)

#fiting the training data into the model

predicted_values = LR.predict(X_test)

#predicting the values of testing data

LR.score(X,y)*100

#finding accuracy of predicted values

import seaborn as sns

g = sns.regplot(df["x"], df["y"], ci=None, scatter_kws={'color':'g', 's':9})
g.set_title("Simple linear regression")
g.set_ylabel("y")
g.set_xlabel("x")
#plotting the x and y data usin seaborn

LR.intercept_ + LR.coef_*60

#y=y = c + b*x -> b is the regression coefficient and c is the intercept


#predicting the value of y for x =60

LR.predict([[60]])