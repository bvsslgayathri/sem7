# -*- coding: utf-8 -*-
"""SVM_Week3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KL9clc1cwGdPPPJeBYYl-i_ojlRIdNe6
"""

import pandas as pd
from sklearn.model_selection import train_test_split 
from sklearn.preprocessing import LabelEncoder

import sklearn.metrics as metrics

from sklearn import svm

import numpy as np

data = pd.read_csv('/content/creditcard.csv', on_bad_lines='skip')
df = pd.DataFrame(data)

df=df.dropna()

df_train_all = df[0:15000] 
df_test_all = df[15000:] 

df_test_all

X_train = df_train_all.drop(['Time', 'Class'],axis=1) # We drop the features Time (useless), and the Class (label)
y_train = df_train_all['Class'] # We create our label
X_train = np.asarray(X_train)
y_train = np.asarray(y_train)
X_train

X_test_all = df_test_all.drop(['Time', 'Class'],axis=1)
y_test_all = df_test_all['Class']
X_test_all
X_test_all = np.asarray(X_test_all)
y_test_all = np.asarray(y_test_all)
X_test_all

model = svm.SVC(kernel='linear') # Linear Kernel

model.fit(X_train,y_train)

# np.all(np.isfinite(df_test_all))
# np.all(np.isfinite(df_test_all))
df.isnull().any()

predicted_values=model.predict(X_test_all)

acc_svm = metrics.accuracy_score(y_test_all, predicted_values)

print(acc_svm*100)

from sklearn.metrics import confusion_matrix
import seaborn as sb

svm_cm = confusion_matrix(y_test_all,predicted_values) #Confusion Matrix for Predicted values
sb.heatmap(svm_cm, annot=True, linewidth=1.0,cmap='PuBu')